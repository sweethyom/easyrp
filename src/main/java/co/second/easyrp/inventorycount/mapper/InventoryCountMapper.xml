<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="co.second.easyrp.inventorycount.mapper.InventoryCountMapper">
	<select id="inventoryCountList">
		SELECT 
			distinct ic.cod,
			e.name AS employee,
			w.name AS warehouse,
			l.name AS location,
			ic.count_date,
			ic.inv_date,
			ic.countclass,
			ic.prcclass
		FROM inventorycount ic
		LEFT JOIN inventorycountdetail icd
		ON ic.cod = icd.inventorycount_cod
		LEFT JOIN inventory i
		ON icd.inventory_cod = i.cod
		LEFT JOIN product p
		ON icd.product_cod = p.cod
		LEFT JOIN employee e
		ON ic.employee_cod = e.cod
		LEFT JOIN warehouse w
		ON ic.warehouse_cod = w.cod
		LEFT JOIN location l
		ON ic.location_cod = l.cod
		WHERE ic.deleteyn = 'N'
		<if test="searchCod != null and searchCod != ''">
			AND ic.cod = #{searchCod}
		</if>
		<if test="searchEmployee != null and searchEmployee != ''">
			AND e.name LIKE CONCAT('%', #{searchEmployee}, '%')
		</if>
		<if test="searchWarehouse != null and searchWarehouse != ''">
			AND w.name LIKE CONCAT('%', #{searchWarehouse}, '%')
		</if>
		<if test="searchInventory != null and searchInventory != ''">
			AND i.name = LIKE CONCAT('%',#{searchInventory}, '%')
		</if>
				<if test="searchProduct!= null and searchProduct != ''">
			AND p.name = LIKE CONCAT('%',#{searchProduct}, '%')
		</if>
		<if test="preSearchDate != null and postSearchDate != null">
			AND ic.count_date BETWEEN #{preSearchDate} AND #{postSearchDate}
		</if>
		ORDER BY ic.cod DESC
		LIMIT #{pageSize} OFFSET #{offset}
	</select>
	<select id="countInventoryCountLists">
		SELECT 
			count(*)
		FROM inventorycount ic
		LEFT JOIN inventorycountdetail icd
		ON ic.cod = icd.inventorycount_cod
		LEFT JOIN inventory i
		ON icd.inventory_cod = i.cod
		LEFT JOIN product p
		ON icd.product_cod = p.cod
		LEFT JOIN employee e
		ON ic.employee_cod = e.cod
		LEFT JOIN warehouse w
		ON ic.warehouse_cod = w.cod
		LEFT JOIN location l
		ON ic.location_cod = l.cod
		WHERE ic.deleteyn = 'N'
		<if test="searchCod != null and searchCod != ''">
			AND ic.cod = #{searchCod}
		</if>
		<if test="searchEmployee != null and searchEmployee != ''">
			AND employee LIKE CONCAT('%', #{searchEmployee}, '%')
		</if>
		<if test="searchWarehouse != null and searchWarehouse != ''">
			AND warehouse LIKE CONCAT('%', #{searchWarehouse}, '%')
		</if>
		<if test="searchLocation != null and searchLocation != ''">
			AND location LIKE CONCAT('%', #{searchLocation}, '%')
		</if>
		<if test="searchInventory != null and searchInventory != ''">
			AND i.name = LIKE CONCAT('%',#{searchInventory}, '%')
		</if>
				<if test="searchProduct!= null and searchProduct != ''">
			AND p.name = LIKE CONCAT('%',#{searchProduct}, '%')
		</if>
		<if test="preSearchDate != null and postSearchDate != null">
			AND ic.count_date BETWEEN #{preSearchDate} AND #{postSearchDate}
		</if>
		</select>
		<select id="selectInventoryCountList">
		SELECT ic.cod, ic.count_date, ic.inv_date, w.name as warehouse, l.name as location, countclass, e.name as employee, ic.prcclass
		  FROM inventorycount ic
		  LEFT JOIN employee e
		    ON e.cod = ic.employee_cod
		  LEFT JOIN warehouse w
		 	ON w.cod = ic.warehouse_cod
		  LEFT JOIN location l
		    ON l.cod = ic.location_cod
		 WHERE ic.deleteyn = 'N'
		   AND ic.cod= #{cod}

		</select>
		<select id="selectInventoryCount">
		SELECT ic.cod, ic.count_date, ic.inv_date, w.name as warehouse, l.name as location, countclass, e.name as employee
		  FROM inventorycount ic
		  LEFT JOIN employee e
		    ON e.cod = ic.employee_cod
		  LEFT JOIN warehouse w
		 	ON w.cod = ic.warehouse_cod
		  LEFT JOIN location l
		    ON l.cod = ic.location_cod
		 WHERE ic.deleteyn = 'N'
		   AND ic.cod= #{cod}
		</select>
		<select id="selectedInventoryCountDetailList">
		SELECT icd.num, icd.product_cod, icd.inventory_cod, icd.inventorycount_cod, p.prodname as product, i.name as inventory,icd.computing_qty, icd.qty, icd.diff_qty, icd.note, icd.proc_class, icd.price, icd.unitprice, icd.account
		  FROM inventorycountdetail icd
		LEFT JOIN inventorycount ic
		  ON icd.inventorycount_cod = ic.cod
		LEFT JOIN product p
		  ON icd.product_cod = p.cod
		LEFT JOIN inventory i
		  ON icd.inventory_cod = i.cod
		LEFT JOIN unit u
		  ON icd.unit_cod = u.cod
		LEFT JOIN inventoryadjustmentdetail iad
		  ON iad.num=icd.adjustmentdetail_num
	   WHERE icd.inventorycount_cod=#{cod}
		</select>
		<select id="selectedInventoryCountDetail">
		SELECT icd.num, icd.product_cod, icd.inventory_cod, icd.inventorycount_cod, p.prodname as product, i.name as inventory,icd.computing_qty, icd.qty, icd.diff_qty, icd.note, icd.proc_class, icd.account 
		  FROM inventorycountdetail icd
		LEFT JOIN inventorycount ic
		  ON icd.inventorycount_cod = ic.cod
		LEFT JOIN product p
		  ON icd.product_cod = p.cod
		LEFT JOIN inventory i
		  ON icd.inventory_cod = i.cod
		LEFT JOIN unit u
		  ON icd.unit_cod = u.cod
		LEFT JOIN inventoryadjustmentdetail iad
		  ON iad.num=icd.adjustmentdetail_num
	   WHERE icd.inventorycount_cod=#{cod}
		</select>
	<select id="getAllProductInventoryList">
		 SELECT  p.prodname as name, p.cod as cod, p.cur_inv_qty as computingQty, icd.procclass
		 FROM product p
		 LEFT JOIN inventorycountdetail icd
		 ON icd.inventory_cod = p.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 ON ia.cod = iad.inventoryadjustment_cod
		 
		 UNION 
		 
		 SELECT i.name as name, i.cod as cod, i.cur_inv_qty as computingQty, ia.procclass
		 FROM inventory i
		 LEFT JOIN inventorycountdetail icd
		 ON icd.inventory_cod = i.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 ON ia.cod = iad.inventoryadjustment_cod
	</select>
	<select id="getAllSelectedCountList">
		 SELECT  p.prodname as name, p.cod as cod, p.cur_inv_qty as computingQty, ia.procclass
		 FROM product p
		 LEFT JOIN inventorycountdetail icd
		 ON icd.inventory_cod = p.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 ON ia.cod = iad.inventoryadjustment_cod
		 WHERE p.cod=#{cod}

		 UNION 
		 
		 SELECT i.name as name, i.cod as cod, i.cur_inv_qty as computingQty, ia.procclass
		   FROM inventory i
		 LEFT JOIN inventorycountdetail icd
		 	 ON icd.inventory_cod = i.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 	 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 	 ON ia.cod = iad.inventoryadjustment_cod
		 WHERE i.cod=#{cod}
	</select>
	<insert id="insertInventoryCount">
		INSERT INTO inventorycount(cod, employee_cod, warehouse_cod, countclass, deleteyn)
		Values(#{cod}, #{employeeCod}, #{warehouseCod}, #{countclass}, 'N')
	</insert>
	<insert id="insertCountDetailList">
		INSERT INTO inventorycountdetail(inventorycount_cod, product_cod, inventory_cod, computing_qty, unit_cod, qty, note, diff_qty, price, unitprice, account )
		Values(#{inventorycountCod}, #{productCod}, #{inventoryCod}, #{computingQty}, #{unitCod}, #{qty}, #{note}, #{diffQty}, #{price}, #{unitprice}, #{account})
	</insert>
	<insert id="insertAdjustmentList">
		INSERT INTO inventoryadjustment(cod, employee_cod)
		Values(#{cod}, #{employeeCod})
	</insert>
	<insert id="insertAdjustmentDetailList">
	
		INSERT INTO inventoryadjustmentdetail(inventoryadjustment_cod, inv_cod, product_cod, unit_cod, computing_qty, qty, note, count_qty, unit_price, price)
		Values(#{inventoryadjustmentCod}, #{invCod}, #{productCod}, #{unitCod}, #{computingQty}, #{qty}, #{note}, #{countQty}, #{unitPrice}, #{price})
	</insert>
	<select id="warehouseList">
	 SELECT cod, name
	   FROM warehouse
	</select>
	<select id="getAllProdInvWarehouse">
		 SELECT  p.prodname as name, p.cod as cod, p.cur_inv_qty as computingQty, p.account
		 FROM product p
		 LEFT JOIN inventorycountdetail icd
		 ON icd.inventory_cod = p.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 ON ia.cod = iad.inventoryadjustment_cod
		 LEFT JOIN warehouse w
		 ON w.cod = p.warehouse_cod
		 WHERE w.name=#{name}
		   AND p.deleteyn = 'N'

		 UNION 
		 
		 SELECT i.name as name, i.cod as cod, i.cur_inv_qty as computingQty, i.account
		   FROM inventory i
		 LEFT JOIN inventorycountdetail icd
		 	 ON icd.inventory_cod = i.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 	 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 	 ON ia.cod = iad.inventoryadjustment_cod
		 LEFT JOIN warehouse w
		 	 ON w.cod = i.warehouse_cod
		 WHERE w.name=#{name}
		   AND i.deleteyn = 'N'
	</select>
		<select id="selectedWarehouseList">
	 SELECT cod, name
	   FROM warehouse
	 WHERE name=#{name}
	</select>
		<select id="wareHouseCod">
        SELECT cod FROM warehouse WHERE name = #{name}
    </select>
	<select id="getProdInvAccount">
		 SELECT  p.prodname as name, p.cod as cod, p.cur_inv_qty as computingQty, p.account
		 FROM product p
		 LEFT JOIN inventorycountdetail icd
		 ON icd.inventory_cod = p.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 ON ia.cod = iad.inventoryadjustment_cod
		 LEFT JOIN warehouse w
		 ON w.cod = p.warehouse_cod
		 where w.name=#{warehouse}
		 <choose>
		   <when test="account.equals('완제품') or account.equals('전체')">
       	   AND p.account IN ('완제품')
       	 </when>
       	 <when test="account.equals('자재')">
       	   AND p.account = #{account}
       	 </when>
		 </choose>
		  

		 UNION 
		 
		 SELECT i.name as name, i.cod as cod, i.cur_inv_qty as computingQty, i.account
		   FROM inventory i
		 LEFT JOIN inventorycountdetail icd
		 	 ON icd.inventory_cod = i.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 	 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 	 ON ia.cod = iad.inventoryadjustment_cod
		 LEFT JOIN warehouse w
		 	 ON w.cod = i.warehouse_cod
		 WHERE w.name=#{warehouse}
       	<choose>
       	 <when test="account.equals('자재') or account.equals('전체')">
       	   AND i.account IN ('부품', '원자재')
       	 </when>
       	 <when test="account.equals('완제품')">
       	   AND i.account = #{account}
       	 </when>
       	</choose>
            
        
        

	</select>
	
	<select id="selectMaxCod">
	SELECT COALESCE(MAX(CAST(RIGHT (cod,3) AS SIGNED)), 0) AS cod 
	FROM inventorycount
	</select>
	
		<select id="selectMaxinvadjCod">
	SELECT COALESCE(MAX(CAST(RIGHT (cod,3) AS SIGNED)), 0) AS cod 
	FROM inventoryadjustment
	</select>
	
	<select id="getcomputingqty">
	SELECT cur_inv_qty as computingQty
	  FROM inventory i
	WHERE i.cod=#{cod}  
	
	UNION
	
	SELECT cur_inv_qty as computingQty
	  FROM product p
	 WHERE p.cod=#{cod}
	</select>
	<select id="selectinventoryadjustmentdetail">
		 SELECT p.cod as cod
		 FROM product p
		 LEFT JOIN inventorycountdetail icd
		 ON icd.product_cod = p.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 ON ia.cod = iad.inventoryadjustment_cod
		 WHERE icd.num=#{num}

		 UNION 
		 
		 SELECT i.cod as cod
		   FROM inventory i
		 LEFT JOIN inventorycountdetail icd
		 	 ON icd.inventory_cod = i.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 	 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 	 ON ia.cod = iad.inventoryadjustment_cod
		 WHERE icd.num=#{num}
	</select>
	<select id="selectedInventoryCountDetailName">
		 SELECT p.prodname as product
		 FROM product p
		 LEFT JOIN inventorycountdetail icd
		 ON icd.product_cod = p.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 ON ia.cod = iad.inventoryadjustment_cod
		 WHERE icd.num=#{num}

		 UNION 
		 
		 SELECT i.name as inventory
		   FROM inventory i
		 LEFT JOIN inventorycountdetail icd
		 	 ON icd.inventory_cod = i.cod
		 LEFT JOIN inventoryadjustmentdetail iad
		 	 ON icd.adjustmentdetail_num = iad.num
		 LEFT JOIN inventoryadjustment ia
		 	 ON ia.cod = iad.inventoryadjustment_cod
		 WHERE icd.num=#{num} 
	</select>
	<select id="getcountqty">
	SELECT qty as countQty
	  FROM inventorycountdetail
	WHERE num=#{num}
	</select>
	
	<select id="getprice">
		 SELECT p.unitprice
		 FROM product p
		 LEFT JOIN inventorycountdetail icd
		   ON p.cod = icd.product_cod
		 WHERE p.cod = #{cod}

		 UNION 
		 
		 SELECT i.unitprice
		   FROM inventory i
		   LEFT JOIN inventorycountdetail icd
		 	ON i.cod = icd.inventory_cod
		 WHERE i.cod = #{cod}
	</select>
	<update id="updateinventoryadjustment">
	UPDATE
			inventory i
	SET
		i.cur_inv_qty = i.cur_inv_qty-#{qty}
	WHERE 
		i.cod = #{invCod}
	</update>
	
		<update id="updateproductadjustment">
	UPDATE 
			product p
	SET
		p.cur_inv_qty = p.cur_inv_qty-#{qty}
	WHERE 
		p.cod = #{productCod}
	</update>
	<update id="updateinventorycountdetailprocclass">
	UPDATE 
		inventorycountdetail
	SET
		proc_class = '처리'
	WHERE 
		num = #{adjnum}
	</update>
		<update id="updateinventorycountprocclass">
	UPDATE 
		inventorycount
	SET
		prcclass = '처리'
	WHERE 
		cod = #{countcod}
	</update>
	<select id="selectinventoryadjustmentnum" resultType="int">
	SELECT num
	  FROM inventoryadjustmentdetail
	 WHERE inventoryadjustment_cod = #{inventoryadjustmentCod}
	 <choose>
	  <when test="invCod == null or invCod.equals('')">
	   AND product_cod = #{productCod}
	  </when>
	  <when test="productCod == null or productCod.equals('')">
	   AND inv_cod = #{invCod}
	  </when>
	 </choose>
	</select>
	<select id="selectinventorycountmentnum" resultType="int">
	SELECT num
	  FROM inventorycountdetail
	 WHERE inventorycount_cod = #{inventorycountCod}
	 <choose>
	  <when test="inventoryCod == null or inventoryCod.equals('')">
	   AND product_cod = #{productCod}
	  </when>
	  <when test="productCod == null or productCod.equals('')">
	   AND inventory_cod = #{inventoryCod}
	  </when>
	 </choose>
	ORDER BY num DESC
	 </select>
	 <select id="selectinventorycountcod">
	 select inventorycount_cod
	   from inventorycountdetail
	  where num=#{num}
	 </select>
</mapper>